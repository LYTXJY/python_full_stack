#逻辑运算符最低（与或非）
#关系运算符其次(大于，小于)
#最强：算数运算符（加减乘除）

print(1 + 2 * 2 / 3 > 2 * (3 - 2) + 1)

#(1+1.33) > (2+1)
#false


#一元？二元？

print(+3 > -2)
#这里的加与减，代表了正负号
#一元：只有一个操作数：3或者2

print(2 + 3)
#这里的2与3是代表有两个操作数，+变成了二元


#真实环境：软件工程规范
print( (1 + 2 * 2 / 3) > (2 * (3 - 2) + 1) )
#使用优先级高的小括号，方便理解与观看


print("--------------------------")
print(1<2>3)
print(1<2<3)
print(5>3>2)
#如果是简单的，从左往右计算，5>3得1，1>2得0：所以这种从左往右计算是错误的想法
#正确的思路是 5>3 && 3>2 = 1 && 1 ，得1，True

